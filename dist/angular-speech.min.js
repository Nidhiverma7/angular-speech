/**
* Package: angular-speech - v0.1.0 
* Description: A simple angular component to deal with browser SpeechRecognition 
* Last build: 2017-12-20 
* @author codekraft-studio 
* @license MIT 
*/
angular.module("angular-speech",[]),angular.module("angular-speech").run(function($templateCache){$templateCache.put("angular-speech/button.html",'<span name="Angular Speech" ng-bind="vm.statusText"></span>')}),angular.module("angular-speech").component("angularSpeech",{templateUrl:"angular-speech/button.html",bindings:{lang:"@",onText:"&"},controllerAs:"vm",controller:function($scope,$element,$attrs,$window,$log){if($window.SpeechRecognition=$window.SpeechRecognition||$window.webkitSpeechRecognition,!$window.SpeechRecognition)return void $log.error("SpeechRecognition is not supported from your browser!");var vm=this,recognition=null;vm.recording=!1,vm.startRecording=function(){recognition.start(),vm.recording=!0,$element.addClass("recording")},vm.stopRecording=function(){recognition.stop(),vm.recording=!1,$element.removeClass("recording")},$element.on("click",function(){vm.recording?vm.stopRecording():vm.startRecording()}),vm.$onInit=function(){recognition=new SpeechRecognition,recognition.lang=vm.lang||"en-US",recognition.interimResults=!0,recognition.addEventListener("end",vm.stopRecording),recognition.addEventListener("result",function(event){const text=Array.from(event.results,function(r){return r[0]}).map(function(result){return result.transcript}).join("");vm.onText({content:text}),$scope.$apply()})}}});